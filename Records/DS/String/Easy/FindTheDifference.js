// You are given two strings s and t.
// String t is generated by random shuffling string s and then add one more letter at a random position.
// Return the letter that was added to t.

// Examples:
// Input: s = "abcd", t = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.

// Input: s = "", t = "y"
// Output: "y"
 
// Constraints:
// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lowercase English letters.

// Using XOR
/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference = function(s, t) {
    let result = 0;
    for (let char of s) {
        result ^= char.charCodeAt(0);
    }
    for (let char of t) {
        result ^= char.charCodeAt(0);
    }
    return String.fromCharCode(result);
};
// Time Complexity:O(n)
// Space Complexity:O(1)

// Using map
var findTheDifference = function(s, t) {
    let map = new Map()
    for(let char of s){
        if(map.has(char)){
            map.set(char, map.get(char) + 1)
        }else{
            map.set(char, 1)
        }
    }

    for(let char of t){
        if(map.has(char)){
            if(map.get(char) === 1){
                map.delete(char)
            }else{
                map.set(char, map.get(char) - 1)
            }
        }else{
            return char
        }
    }
};
// Time Complexity:O(n)
// Space Complexity:O(n)
